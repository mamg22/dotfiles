#!/bin/sh

#TODO: Rewrite in python

### Begin configuration

xdg_videos_dir="$(xdg-user-dir VIDEOS)"

output_dir="$xdg_videos_dir"
filename_format="%(uploader)s/%(title)s.%(ext)s"
format='mp4'
resolution=480

### End of configuration

usage()
{
    cat <<EOF
usage: $(basename "$0") [options]... url

An easy to use wrapper for yt-dlp with caching, resistant to slow and
unstable internet connections.

Available options:
    -a              Download only the best available audio     
    -c              Use the contents of the clipboard instead of the given url
    -C DIRECTORY    Use DIRECTORY as base directory for downloads
    -f FORMAT       Download video in format FORMAT
                    Currently only supports mp4 and webm as formats
    -F              Show available formats and exit
    -h              Display this help and exit
    -o YTDLFORMAT   Use YTDLFORMAT as the filename format passed to yt-dlp
    -r RESOLUTION   Minimum video resolution to download
    -s SUBLANGS     Subtitle languages to download
    -y YTDLOPTIONS  Pass YTDLOPTIONS directly to yt-dlp
                    Multiple uses append to the other options

EOF
}

download()
{
    format="$1"
    output="$2"
    url="$3"
    subs="$4"
    opts="$5"
    untildone yt-dlp -f "$format" -o "$output" --add-metadata \
        $subs \
        -S "+fps" \
        $opts -- "$url"
}

# Parse arguments
while getopts acC:f:Fho:r:s:y: name; do
    case "$name" in
        (a)
            audio_only=1
            ;;
        (c)
            use_clipboard=1
            ;;
        (C)
            output_dir="$OPTARG"
            ;;
        (f)
            format="$OPTARG"
            ;;
        (F)
            show_formats=1
            ;;
        (h)
            usage >&2
            exit 0
            ;;
        (o)
            filename_format="$OPTARG"
            ;;
        (r)
            resolution="$OPTARG"
            ;;
        (s)
            subtitles="$OPTARG"
            ;;
        (y)
            ytdl_opts="$ytdl_opts $OPTARG"
            ;;
        (?)
            exit 2
            ;;
    esac
done
shift $((OPTIND - 1))

# Get the url
url="$1"
[ -n "$use_clipboard" ] && url="$(xsel -bo)"

if [ -z "$url" ]; then
    echo "No url provided" >&2
    exit 1
fi

# Determine the output filename
output_format="$output_dir/$filename_format"

if [ -n "$show_formats" ]; then
    yt-dlp -F -- "$url"
    exit 0
fi

if [ "$format" = 'webm' ]; then
    vformat='vp9'
    aformat='opus'
fi

if [ "$format" = 'mp4' ]; then
    vformat='avc1'
    aformat='mp4a'
fi

format_str="bestvideo[height<=$((resolution+100))][vcodec*=$vformat]+bestaudio[acodec*=$aformat]/worst[height>=$resolution]" 

if [ -n "$audio_only" ]; then
    format_str="bestaudio[acodec*=$aformat]/worst"
fi

# If requesting subtitles, request both normal and automatic subtitles for the given languages
if [ -n "$subtitles" ]; then
    subtitles="--write-sub --write-auto-sub --sub-lang $subtitles"
else
    subtitles=""
fi

download "$format_str" "$output_format" "$url" "$subtitles" "$ytdl_opts"
