#!/bin/sh

ok_text="[\033[32m OK \033[0m]"
fail_text="[\033[31mFAIL\033[0m]"

isp_ip="192.168.39.1"

isp_test() {
    curl -s "$isp_ip" >/dev/null 2>&1
}
isp_test_text="Testing ISP connection"

dns_test() {
    resolvectl query --cache=false google.com >/dev/null 2>&1
}
dns_test_text="Testing DNS connection"

web_test() {
    response="$(curl -s "http://$isp_ip/status" -w '%{http_code}' -o /dev/null)"
    if [ "$?" -ne 0 ]; then
        return 1
    fi
    case "$response" in
        (3??)
            return 1
            ;;
        (*)
            return 0
            ;;
    esac
}
web_test_text="Testing web connection"

run_it() {
    printf "%s | %s " "$(date "+%k:%M" | tr -d '\n')" "$2"
    "$1"
    exit_code="$?"
    if [ "$exit_code" -eq 0 ]; then
        printf "$ok_text\n"
    else
        printf "$fail_text"
    fi
    return "$exit_code"
}

loop_it() {
    while true; do
        if run_it "$1" "$2"; then
            break
        fi
        sleep 1m
        printf "\r"
    done
}
# Parse options
while getopts s name; do
    case "$name" in
        (s)
            silent=1
            ;;
        (?)
            exit 2
            ;;
    esac
done
shift $((OPTIND - 1))

case "$1" in
    (isp)
        loop_it isp_test "$isp_test_text"
        ;;
    (dns)
        loop_it dns_test "$dns_test_text"
        ;;
    (web)
        loop_it web_test "$web_test_text"
        ;;
    (once)
        run_it isp_test "$isp_test_text"
        run_it dns_test "$dns_test_text"
        run_it web_test "$web_test_text"
        echo
        exit 0
        ;;
    (*)
        loop_it isp_test "$isp_test_text"
        loop_it dns_test "$dns_test_text"
        loop_it web_test "$web_test_text"
        ;;
esac

echo "Llego el intenet"
if [ "${silent:-0}" -eq 1 ]; then
    exit
fi

mpv "$HOME/MÃºsica/Newton/Newton - Streamline.mp3" --no-terminal
